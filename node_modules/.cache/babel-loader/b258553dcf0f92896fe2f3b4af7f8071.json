{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/UX:UI/UI_tricks/src/component/neumorphicLightSwitch/NeumorphicLightSwitch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport './neumorphicLightSwitch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NeumorphicLightSwitch = () => {\n  _s();\n\n  const SWITCH_LIGHT_MIN = 40;\n  const SWITCH_LIGHT_MAX = 100;\n  const THUMB_HUE_MIN = 0;\n  const THUMB_HUE_MAX = 120;\n  const THUMB_SAT = 90.4;\n  const THUMB_LIGHT = 44.9;\n  const [pct, setPct] = useState(100);\n  const L1 = pct * (SWITCH_LIGHT_MAX - SWITCH_LIGHT_MIN) + SWITCH_LIGHT_MIN;\n  const L2 = L1 - 10;\n  const L3 = L1 - 37;\n  const L = [L1, L2, L3];\n  const thumbHue = pct * (THUMB_HUE_MAX - THUMB_HUE_MIN) + THUMB_HUE_MIN;\n  const thumbHSL = `${thumbHue}, ${THUMB_SAT}%,${THUMB_LIGHT}%`;\n  const switchBody = document.querySelector('.switch-light'); // update the slider shade\n\n  L.forEach((light, i) => {\n    if (light < 0) light = 0;\n    switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--l${i + 1}`, `hsl(228,9.8%,${light}%)`);\n  }); // update the thumb icon hue\n\n  switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--p`, `hsl(${thumbHSL})`);\n  switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--pT`, `hsla(${thumbHSL},0)`);\n\n  const ajustSlider = e => {\n    const target = e.target || e;\n    setPct(+target.value / +target.max);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"switch-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"brightness\",\n        children: \"Brightness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"brightness\",\n        name: \"brightness\",\n        min: \"1\",\n        max: \"100\",\n        value: \"100\",\n        onChange: ajustSlider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NeumorphicLightSwitch, \"TSpKfV8qfdXqRe0cczrPrtjQ44A=\");\n\n_c = NeumorphicLightSwitch;\nexport default NeumorphicLightSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"NeumorphicLightSwitch\");","map":{"version":3,"sources":["/Users/julie/Documents/UX:UI/UI_tricks/src/component/neumorphicLightSwitch/NeumorphicLightSwitch.js"],"names":["React","useState","useEffect","NeumorphicLightSwitch","SWITCH_LIGHT_MIN","SWITCH_LIGHT_MAX","THUMB_HUE_MIN","THUMB_HUE_MAX","THUMB_SAT","THUMB_LIGHT","pct","setPct","L1","L2","L3","L","thumbHue","thumbHSL","switchBody","document","querySelector","forEach","light","i","style","setProperty","ajustSlider","e","target","value","max"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,8BAAP;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AACnC,QAAMC,gBAAgB,GAAG,EAAzB;AACA,QAAMC,gBAAgB,GAAG,GAAzB;AACA,QAAMC,aAAa,GAAG,CAAtB;AACA,QAAMC,aAAa,GAAG,GAAtB;AACA,QAAMC,SAAS,GAAG,IAAlB;AACA,QAAMC,WAAW,GAAG,IAApB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,GAAD,CAA9B;AACA,QAAMW,EAAE,GAAGF,GAAG,IAAIL,gBAAgB,GAAGD,gBAAvB,CAAH,GAA8CA,gBAAzD;AACA,QAAMS,EAAE,GAAGD,EAAE,GAAG,EAAhB;AACA,QAAME,EAAE,GAAGF,EAAE,GAAG,EAAhB;AACA,QAAMG,CAAC,GAAG,CAACH,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAV;AACA,QAAME,QAAQ,GAAGN,GAAG,IAAIH,aAAa,GAAGD,aAApB,CAAH,GAAwCA,aAAzD;AACA,QAAMW,QAAQ,GAAI,GAAED,QAAS,KAAIR,SAAU,KAAIC,WAAY,GAA3D;AACA,QAAMS,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAnB,CAdmC,CAenC;;AACAL,EAAAA,CAAC,CAACM,OAAF,CAAU,CAACC,KAAD,EAAQC,CAAR,KAAc;AACvB,QAAID,KAAK,GAAG,CAAZ,EACCA,KAAK,GAAG,CAAR;AACDJ,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEM,KAAZ,CAAkBC,WAAlB,CAA+B,MAAKF,CAAC,GAAG,CAAE,EAA1C,EAA8C,gBAAeD,KAAM,IAAnE;AACA,GAJD,EAhBmC,CAqBnC;;AACAJ,EAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEM,KAAZ,CAAkBC,WAAlB,CAA+B,KAA/B,EAAsC,OAAMR,QAAS,GAArD;AACAC,EAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEM,KAAZ,CAAkBC,WAAlB,CAA+B,MAA/B,EAAuC,QAAOR,QAAS,KAAvD;;AAEA,QAAMS,WAAW,GAAIC,CAAD,IAAO;AAC1B,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAF,IAAYD,CAA3B;AACAhB,IAAAA,MAAM,CAAC,CAACiB,MAAM,CAACC,KAAR,GAAgB,CAACD,MAAM,CAACE,GAAzB,CAAN;AACA,GAHD;;AAKA,sBACC;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACC;AAAO,QAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,YAAvB;AAAoC,QAAA,IAAI,EAAC,YAAzC;AACC,QAAA,GAAG,EAAC,GADL;AACS,QAAA,GAAG,EAAC,KADb;AACmB,QAAA,KAAK,EAAC,KADzB;AAEC,QAAA,QAAQ,EAAEJ;AAFX;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CAzCD;;GAAMvB,qB;;KAAAA,qB;AA2CN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './neumorphicLightSwitch.scss';\n\nconst NeumorphicLightSwitch = () => {\n\tconst SWITCH_LIGHT_MIN = 40;\n\tconst SWITCH_LIGHT_MAX = 100;\n\tconst THUMB_HUE_MIN = 0;\n\tconst THUMB_HUE_MAX = 120;\n\tconst THUMB_SAT = 90.4;\n\tconst THUMB_LIGHT = 44.9;\n\tconst [pct, setPct] = useState(100);\n\tconst L1 = pct * (SWITCH_LIGHT_MAX - SWITCH_LIGHT_MIN) + SWITCH_LIGHT_MIN;\n\tconst L2 = L1 - 10;\n\tconst L3 = L1 - 37;\n\tconst L = [L1, L2, L3];\n\tconst thumbHue = pct * (THUMB_HUE_MAX - THUMB_HUE_MIN) + THUMB_HUE_MIN;\n\tconst thumbHSL = `${thumbHue}, ${THUMB_SAT}%,${THUMB_LIGHT}%`;\n\tconst switchBody = document.querySelector('.switch-light');\n\t// update the slider shade\n\tL.forEach((light, i) => {\n\t\tif (light < 0)\n\t\t\tlight = 0;\n\t\tswitchBody?.style.setProperty(`--l${i + 1}`, `hsl(228,9.8%,${light}%)`);\n\t});\n\t// update the thumb icon hue\n\tswitchBody?.style.setProperty(`--p`, `hsl(${thumbHSL})`);\n\tswitchBody?.style.setProperty(`--pT`, `hsla(${thumbHSL},0)`);\n\n\tconst ajustSlider = (e) => {\n\t\tconst target = e.target || e;\n\t\tsetPct(+target.value / +target.max)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form className=\"switch-light\">\n\t\t\t\t<label for=\"brightness\">Brightness</label>\n\t\t\t\t<input type=\"range\" id=\"brightness\" name=\"brightness\"\n\t\t\t\t\tmin=\"1\" max=\"100\" value=\"100\"\n\t\t\t\t\tonChange={ajustSlider}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default NeumorphicLightSwitch;"]},"metadata":{},"sourceType":"module"}