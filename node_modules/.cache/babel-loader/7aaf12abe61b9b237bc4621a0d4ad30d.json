{"ast":null,"code":"var _jsxFileName = \"/Users/julie/Documents/UX:UI/UI_tricks/src/component/neumorphicLightSwitch/NeumorphicLightSwitch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { updateStrings } from \"yargs\";\nimport './neumorphicLightSwitch.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NeumorphicLightSwitch = () => {\n  _s();\n\n  const SWITCH_LIGHT_MIN = 40;\n  const SWITCH_LIGHT_MAX = 100;\n  const THUMB_HUE_MIN = 0;\n  const THUMB_HUE_MAX = 120;\n  const THUMB_SAT = 90.4;\n  const THUMB_LIGHT = 44.9;\n  const [value, setValue] = useState(100);\n  const [pct, setPct] = useState(1);\n  const [L, setL] = useState([100, 90, 63]);\n  const [thumbHue, setThumbHue] = useState(12000);\n  const thumbHSL = `${thumbHue}, ${THUMB_SAT}%,${THUMB_LIGHT}%`;\n  const switchBody = document.querySelector('.switch-light');\n\n  const updateIt = () => {\n    // update the slider shade\n    L.forEach((light, i) => {\n      if (light < 0) light = 0;\n      switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--l${i + 1}`, `hsl(228,9.8%,${light}%)`);\n    }); // update the thumb icon hue\n\n    switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--p`, `hsl(${thumbHSL})`);\n    switchBody === null || switchBody === void 0 ? void 0 : switchBody.style.setProperty(`--pT`, `hsla(${thumbHSL},0)`);\n  };\n\n  useEffect(() => {\n    updateIt();\n  }, [value]);\n\n  const ajustSlider = e => {\n    const target = e.target || e;\n    setValue(+target.value);\n    setPct(+target.value / +target.max);\n    setL([pct * (SWITCH_LIGHT_MAX - SWITCH_LIGHT_MIN) + SWITCH_LIGHT_MIN, L[0] - 10, L[0] - 37]);\n    setThumbHue(pct * (THUMB_HUE_MAX - THUMB_HUE_MIN) + THUMB_HUE_MIN);\n    updateIt();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"switch-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"brightness\",\n        name: \"brightness\",\n        min: \"1\",\n        max: \"100\",\n        value: value,\n        onChange: ajustSlider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"brightness\",\n        children: \"Brightness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(NeumorphicLightSwitch, \"idQrP0GpFUfxiflbz0THHp6r7lI=\");\n\n_c = NeumorphicLightSwitch;\nexport default NeumorphicLightSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"NeumorphicLightSwitch\");","map":{"version":3,"sources":["/Users/julie/Documents/UX:UI/UI_tricks/src/component/neumorphicLightSwitch/NeumorphicLightSwitch.js"],"names":["React","useState","useEffect","updateStrings","NeumorphicLightSwitch","SWITCH_LIGHT_MIN","SWITCH_LIGHT_MAX","THUMB_HUE_MIN","THUMB_HUE_MAX","THUMB_SAT","THUMB_LIGHT","value","setValue","pct","setPct","L","setL","thumbHue","setThumbHue","thumbHSL","switchBody","document","querySelector","updateIt","forEach","light","i","style","setProperty","ajustSlider","e","target","max"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { updateStrings } from \"yargs\";\nimport './neumorphicLightSwitch.scss';\n\nconst NeumorphicLightSwitch = () => {\n\tconst SWITCH_LIGHT_MIN = 40;\n\tconst SWITCH_LIGHT_MAX = 100;\n\tconst THUMB_HUE_MIN = 0;\n\tconst THUMB_HUE_MAX = 120;\n\tconst THUMB_SAT = 90.4;\n\tconst THUMB_LIGHT = 44.9;\n\tconst [value, setValue] = useState(100);\n\tconst [pct, setPct] = useState(1);\n\tconst [L, setL] = useState([100, 90, 63]);\n\tconst [thumbHue, setThumbHue] = useState(12000);\n\tconst thumbHSL = `${thumbHue}, ${THUMB_SAT}%,${THUMB_LIGHT}%`;\n\tconst switchBody = document.querySelector('.switch-light');\n\n\tconst updateIt = () => {// update the slider shade\n\t\tL.forEach((light, i) => {\n\t\t\tif (light < 0)\n\t\t\t\tlight = 0;\n\t\t\tswitchBody?.style.setProperty(`--l${i + 1}`, `hsl(228,9.8%,${light}%)`);\n\t\t});\n\t\t// update the thumb icon hue\n\t\tswitchBody?.style.setProperty(`--p`, `hsl(${thumbHSL})`);\n\t\tswitchBody?.style.setProperty(`--pT`, `hsla(${thumbHSL},0)`);\n\t};\n\n\tuseEffect(() => {\n\t\tupdateIt();\n\t}, [value]);\n\n\tconst ajustSlider = (e) => {\n\t\tconst target = e.target || e;\n\t\tsetValue(+target.value);\n\t\tsetPct(+target.value / +target.max);\n\t\tsetL([pct * (SWITCH_LIGHT_MAX - SWITCH_LIGHT_MIN) + SWITCH_LIGHT_MIN, L[0] - 10, L[0] - 37]);\n\t\tsetThumbHue(pct * (THUMB_HUE_MAX - THUMB_HUE_MIN) + THUMB_HUE_MIN);\n\t\tupdateIt();\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<form className=\"switch-light\">\n\t\t\t\t<input type=\"range\" id=\"brightness\" name=\"brightness\"\n\t\t\t\t\tmin=\"1\" max=\"100\" value={value}\n\t\t\t\t\tonChange={ajustSlider}\n\t\t\t\t/>\n\t\t\t\t<label for=\"brightness\">Brightness</label>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default NeumorphicLightSwitch;"]},"metadata":{},"sourceType":"module"}